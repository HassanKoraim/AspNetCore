@using ServiceConstracts;
@using Entities;
@model IEnumerable<PersonResponse>

@{
    ViewBag.Title = "Persons";
}
<h1>@ViewBag.Title</h1>
<a href="~/persons/create">Create New Person</a>
<form asp-controller="Persons" asp-action ="Index" method="get">
    <div class="box flex">
        <div class="flex-1">
            <select class="form-input" name="searchBy">

                @foreach (var field in ViewBag.SearchFields)
                {
                    if (field.Key == ViewBag.currentSearchBy)
                    {
                        <option value="@field.Key" selected>@field.Value</option>
                    }
                    else
                    {
                        <option value="@field.Key">@field.Value</option>
                    }


                }
            </select>
        </div>
        <div class="flex-1">
            <input type="search" id="search" class="form-input" placeholder="Search" name="searchString" value=@ViewBag.currentSearchString />
        </div>
        <div class="flex-1">
            <button class="button button-blue-back">Search</button>
            <a href="~/persons/index" class="link-hover">Clear All</a>
        </div>
    </div>
</form>
<div class="table w-100 mt">
    <table>
        <thead>
            @*
            Using The Partail View to render the column headers for the grid.
            *@
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
            {"ColumnName", nameof(PersonResponse.PersonName)},
            {"DisplayName", "Person Name"}
            })
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
            {"ColumnName", nameof(PersonResponse.Email)},
            {"DisplayName", "Email"}
            })
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
            {"ColumnName", nameof(PersonResponse.DateOfBirth)},
            {"DisplayName", "Date Of Birth"}
            })
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
            {"ColumnName", nameof(PersonResponse.Age)},
            {"DisplayName", "Age"}
            })
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
            {"ColumnName", nameof(PersonResponse.Gender)},
            {"DisplayName", "Gender"}
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
            {"ColumnName", nameof(PersonResponse.country)},
            {"DisplayName", "Country"}
            })
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
            {"ColumnName", nameof(PersonResponse.Address)},
            {"DisplayName", "Address"}
            })
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
            {"ColumnName", nameof(PersonResponse.ReceiveNewsLetter)},
            {"DisplayName", "Receive News Letter"}
            })
            @*
            The above code can be replaced with the following code without Partail View
            @foreach(var item in ViewBag.SearchFields)
            {
            @if (ViewBag.currentSortBy == item.Key && (ViewBag.currentSortOrder == SortOrderOptions.ASC.ToString()))
            {
            <th>
            <a href="~/persons/index?searchBy=@ViewBag.currentSearchBy&searchString=@ViewBag.currentSearchString&sortBy=@item.Key&sortOrder=@SortOrderOptions.DESC">
            @item.Value
            </a>
            <i class="fa-solid fa-sort-up" />
            </th>
            }
            else if (ViewBag.currentSortBy == item.Key && (ViewBag.currentSortOrder == SortOrderOptions.DESC.ToString()))
            {
            <th>
            <a href="~/persons/index?searchBy=@ViewBag.currentSearchBy&searchString=@ViewBag.currentSearchString&sortBy=@item.Key&sortOrder=@SortOrderOptions.ASC">
            @item.Value
            </a>
            <i class="fa-solid fa-sort-down" />
            </th>
            }
            else
            {
            <th>
            <a href="~/persons/index?searchBy=@ViewBag.currentSearchBy&searchString=@ViewBag.currentSearchString&sortBy=@item.Key&sortOrder=@SortOrderOptions.DESC">
            @item.Value
            </a>
            <i class="fa-solid fa-sort-up" />
            </th>
            }
            }
            *@
        </thead>
        <tbody>
            @foreach (PersonResponse person in Model)
            {
                <tr>
                    <td>@person.PersonName</td>
                    <td>@person.Email</td>
                    <td>@person.DateOfBirth</td>
                    <td>@person.Age</td>
                    <td>
                        @person.Gender
                    </td>
                    <td>@person.country</td>
                    <td>@person.Address</td>
                    <td>@person.ReceiveNewsLetter</td>
                    @*/Persons/Edit/1*@
                    <td><a asp-controller="Persons" asp-action="Edit" asp-route-PersonID="@person.PersonId" class="button button-green-back">Edit</a></td>
                    <td>
                        <a asp-controller="Persons" asp-action="Delete" asp-route-PersonId="@person.PersonId" class="button button-red-back">Delete</a>
                       @*  <form action="~/persons/delete" method="post">
                            <button type="submit" class="button button-red-back">Delete</button>
                        </form> *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
